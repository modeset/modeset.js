%div.demo_info
  %h6 ElasticPoint demo
  %div Drag the box.
  %p.classes Demos the following classes
  %div modeset/math/elastic_point.js
  %div modeset/scroll/cursor.js
  %div modeset/scroll/touch_tracker.js
%div.demo_holder
  %div.container
    %div.elastic
%div.demo_controls
  %h6 Controls
  %div
    %span Friction
    %span#fric_val
  %input(id="friction" type="number" name="friction" value="75" min="1" max="100")
  %div
    %span Accel
    %span#accel_val
  %input(id="accel" type="number" name="accel" value="40" min="1" max="100")
  %div
    %button Update

:coffeescript
  Demo = ->
    _touch_tracker = null
    _touch_delegate = null
    _cursor = null
    _box = null
    _box_div = $("div.elastic")
    _box_layer = $("div.container")
    _box_base_x = 150
    _box_base_y = 150
    prepContainers = ->
      $("div.container").css
        position: "relative"
        height: "400px"
        width: "400px"
        backgroundColor: "#ff0"

      $("div.elastic").css
        position: "absolute"
        height: "100px"
        width: "100px"
        backgroundColor: "#f0f"

    initElastic = ->
      createTouchCallback()
      _touch_tracker = new MouseAndTouchTracker(_box_layer[0], _touch_delegate, false, "div")
      _cursor = new Cursor()
      _box = new ElasticPoint(_box_base_x, _box_base_y, 0.75, 0.4)
      setUpInputs()
      runTimer()

    setUpInputs = ->
      frictionInput = $("input#friction")
      frictionVal = $("span#fric_val")
      frictionInput.bind "change", (e) ->
        value = frictionInput.val()
        value *= 0.01
        _box.setFriction value
        frictionVal.html value

      accelInput = $("input#accel")
      accelVal = $("span#accel_val")
      accelInput.bind "change", (e) ->
        value = accelInput.val()
        value *= 0.01
        _box.setAccel value
        accelVal.html value

    runTimer = ->
      _box.update()
      _box_div.css
        top: _box.y() + "px"
        left: _box.x() + "px"

      setTimeout (->
        runTimer()
      ), 30

    createTouchCallback = ->
      _touch_delegate = {}
      _touch_delegate.touchUpdated = (state, touchEvent) ->
        switch state
          when MouseAndTouchTracker.state_move
            _box.setTarget _touch_tracker.touchcurrent.x - 50, _touch_tracker.touchcurrent.y - 50
          when MouseAndTouchTracker.state_start
            _cursor.setGrabHand()
          when MouseAndTouchTracker.state_end
            _box.setTarget _box_base_x, _box_base_y
            if _touch_tracker.touch_is_inside
              _cursor.setHand()
            else
              _cursor.setDefault()
          when MouseAndTouchTracker.state_enter
            if _touch_tracker.is_touching
              _cursor.setGrabHand()
            else
              _cursor.setHand()
          when MouseAndTouchTracker.state_leave
            if _touch_tracker.is_touching
              _cursor.setGrabHand()
            else
              _cursor.setDefault()

    $(document).ready ->
      prepContainers()
      initElastic()

  new Demo()